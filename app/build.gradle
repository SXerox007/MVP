buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'checkstyle'
preBuild.dependsOn('checkstyle')
assemble.dependsOn('lint')
check.dependsOn('checkstyle')

android {
    compileSdkVersion 27
    buildToolsVersion '26.0.2'

    /**
     * Define you Project Name here
     */
    def appName = 'MVP Base'

    /**
     * For Internal user only
     */
    def APP_NAME = '\"' + (System.getenv("APP_NAME") ?: appName) + '\"'

    defaultConfig {
        applicationId "com.skeleton.mvp"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 100
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "APP_NAME", APP_NAME
        resValue "string", "app_name", APP_NAME
        resValue "string", "facebook_app_id", "[PROJECT_FB_ID]"
        resValue "string", "fb_login_protocol_scheme", "fb[PROJECT_FB_ID]"
        manifestPlaceholders = [fabric_key: "4b99d2d21c7b5c9888d402bb7e7c5c851dc499c1"]
    }

    flavorDimensions "default"

    buildTypes {

        debug {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }

    productFlavors {
        dev {
            buildConfigField 'String', 'BASE_URL', '"YOUR DEV URL"'
            buildConfigField 'boolean', 'WATER_MARK', 'true'

        }
        qa {
            buildConfigField 'String', 'BASE_URL', '"YOUR TEST URL"'
            buildConfigField 'boolean', 'WATER_MARK', 'true'

        }
        live {
            buildConfigField 'String', 'BASE_URL', '"YOUR_LIVE_URL"'
            buildConfigField 'boolean', 'WATER_MARK', 'false'

        }
        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                outputFileName = ("${appName}_${variant.productFlavors[0].name}_${buildType.name}_v" +
                        "${defaultConfig.versionCode}").toLowerCase().replace(" ", "_") + ".apk"
            }
        }
    }
}

ext {
    supportLibraryVersion = "27.0.2"
    playServicesVersion = "11.6.2"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    //android support dependencies
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:customtabs:$supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"

    //android FCM dependencies
    implementation "com.google.firebase:firebase-messaging:$playServicesVersion"

    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'

    // map and location dependencies
    implementation "com.google.android.gms:play-services-maps:$playServicesVersion"
    implementation "com.google.android.gms:play-services-location:$playServicesVersion"
    implementation "com.google.android.gms:play-services-places:$playServicesVersion"

    //paper db
    implementation 'io.paperdb:paperdb:2.6'

    //Calligraphy (custom font lib)
    implementation 'uk.co.chrisjenx:calligraphy:2.3.0'

    //facebook
    implementation 'com.facebook.android:facebook-android-sdk:4.29.0'

    //multi picker
    implementation 'com.kbeanie:multipicker:1.1.31@aar'

    //for cropping
    implementation 'com.theartofdev.edmodo:android-image-cropper:2.3.+'


    compile('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true;
    }

    //unit testing
    testImplementation 'junit:junit:4.12'
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.9.0'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
apply plugin: 'com.google.gms.google-services'
